/*
 * Copyright (c) 2015 MediaTek Inc.
 * Author: Erin Lo <erin.lo@mediatek.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include "mt2701.dtsi"

/ {
	model = "MediaTek MT2701 evaluation board";
	compatible = "mediatek,mt2701-evb", "mediatek,mt2701";

	memory {
		reg = <0 0x80000000 0 0x3fc00000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		ramoops_mem: mem@83f10000 {
			reg = <0 0x83f10000 0 0xe0000>;
		};
	};

	ramoops {
		compatible = "ramoops";
		memory-region = <&ramoops_mem>;
		record-size = <0 0x1000>;
		console-size = <0 0x8000>;
		bconsole-size = <0 0x4000>;
		ftrace-size = <0 0x2000>;
		pmsg-size = <0 0x10000>;
	};

	ice: ice_debug {
		compatible = "mediatek,mt2701-ice_debug";
		clocks = <&infracfg CLK_INFRA_DBG>;
		clock-names = "ice_dbg";
	};

	sound:sound {
		compatible = "mediatek,mt2701-cs42448-machine";
		mediatek,platform = <&afe>;
		/* CS42448 Machine name */
		audio-routing =
		"Line Out Jack", "AOUT1L",
		"Line Out Jack", "AOUT1R",
		"Line Out Jack", "AOUT2L",
		"Line Out Jack", "AOUT2R",
		"Line Out Jack", "AOUT3L",
		"Line Out Jack", "AOUT3R",
		"Line Out Jack", "AOUT4L",
		"Line Out Jack", "AOUT4R",
		"AIN1L", "AMIC",
		"AIN1R", "AMIC",
		"AIN2L", "Tuner In",
		"AIN2R", "Tuner In",
		"AIN3L", "Satellite Tuner In",
		"AIN3R", "Satellite Tuner In",
		"AIN3L", "AUX In",
		"AIN3R", "AUX In";
		mediatek,audio-codec = <&cs42448>;
		mediatek,audio-codec-bt-mrg = <&bt_sco_codec>;
		pinctrl-names = "default";
		pinctrl-0 = <&aud_pins_default>;
		i2s1-in-sel-gpio1 = <&pio 53 0>;
		i2s1-in-sel-gpio2 = <&pio 54 0>;
		status = "okay";
	};

	bt_sco_codec:bt_sco_codec {
		compatible = "linux,bt-sco";
	};
};

&auxadc {
	status = "okay";
};

&dsi0 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port {
			dsi_out: endpoint {
				remote-endpoint = <&panel_in>;
			};
		};
	};

	panel {
		compatible = "truly,bd0598u4004";
		reset-gpios = <&pio 83 0>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&dsi_out>;
			};
		};
	};
};

&eth {
	mac-address = [00 00 00 00 00 00];
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&ephy_default>;
	gmac0: mac@0 {
		compatible = "mediatek,eth-mac";
		reg = <0>;
		phy-mode = "trgmii";
		fixed-link {
			speed = <1000>;
			full-duplex;
			pause;
		};
	};

	gmac1: mac@1 {
		compatible = "mediatek,eth-mac";
		reg = <1>;
		phy-handle = <&phy5>;
	};

	mdio-bus {
		#address-cells = <1>;
		#size-cells = <0>;
		phy4: ethernet-phy@4 {
			reg = <4>;
			phy-mode = "rgmii";
		};
		phy5: ethernet-phy@5 {
			reg = <5>;
			phy-mode = "rgmii-rxid";
		};
		phy1f: ethernet-phy@1f {
			reg = <0x1f>;
			phy-mode = "rgmii";
		};
	};
};

&gsw {
	mt7530-supply = <&mt6323_vpa_reg>;
	pinctrl-names = "reset";
	pinctrl-0 = <&gsw_reset>;
	mediatek,reset-pin = <&pio 15 0>;
	interrupt-parent = <&pio>;
	interrupts = <129 IRQ_TYPE_EDGE_RISING>;
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins_a>;
	status = "okay";

	cap_touch@5d {
		compatible = "mediatek,cap_touch";
		reg = <0x5d>;
		interrupt-parent = <&pio>;
		interrupts = <1 IRQ_TYPE_EDGE_FALLING>;
		int-gpio = <&pio 23 0>;
		rst-gpio = <&pio 104 0>;
	};
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins_a>;
	status = "okay";
};

&i2c2 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins_a>;
	status = "okay";
	cs42448: cs42448@48 {
		compatible = "cirrus,cs42448";
		reg = <0x48>;
		clocks = <&topckgen CLK_TOP_AUD_I2S1_MCLK>;
		clock-names = "mclk";
	};
};

&mmc0 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc0_pins_default>;
	pinctrl-1 = <&mmc0_pins_uhs>;
	status = "okay";
	bus-width = <8>;
	max-frequency = <50000000>;
	cap-mmc-highspeed;
	vmmc-supply = <&mt6323_vemc3v3_reg>;
	vqmmc-supply = <&mt6323_vio18_reg>;
	non-removable;
};

&mmc1 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_uhs>;
	status = "okay";
	bus-width = <4>;
	max-frequency = <50000000>;
	cap-sd-highspeed;
	sd-uhs-sdr25;
	cd-gpios = <&pio 261 0>;
	wp-gpios = <&pio 29 0>;
	vmmc-supply = <&mt6323_vmch_reg>;
	vqmmc-supply = <&mt6323_vmc_reg>;
};

&mmc2 {
	status = "okay";
	bus-width = <4>;
	max-frequency = <200000000>;
	cap-sd-highspeed;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
};

&nor_flash {
	pinctrl-names = "default";
	pinctrl-0 = <&nor_gpio1_pins>;
	status = "okay";
	max-frequency = <50000000>;
	non-removable;
	flash@0 {
		compatible = "jedec,spi-nor";
		reg = <0>;
	};
};

&mipi_tx0 {
	status = "okay";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_a>;
	status = "disabled";
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_b>;
	status = "disabled";
};
&spi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi_pins_c>;
	status = "disabled";
};

&pio {
	aud_pins_default: audiodefault {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_49_I2S0_DATA__FUNC_I2S0_DATA>,
				 <MT2701_PIN_72_I2S0_DATA_IN__FUNC_I2S0_DATA_IN>,
				 <MT2701_PIN_73_I2S0_LRCK__FUNC_I2S0_LRCK>,
				 <MT2701_PIN_74_I2S0_BCK__FUNC_I2S0_BCK>,
				 <MT2701_PIN_126_I2S0_MCLK__FUNC_I2S0_MCLK>,
				 <MT2701_PIN_33_I2S1_DATA__FUNC_I2S1_DATA>,
				 <MT2701_PIN_34_I2S1_DATA_IN__FUNC_I2S1_DATA_IN>,
				 <MT2701_PIN_35_I2S1_BCK__FUNC_I2S1_BCK>,
				 <MT2701_PIN_36_I2S1_LRCK__FUNC_I2S1_LRCK>,
				 <MT2701_PIN_37_I2S1_MCLK__FUNC_I2S1_MCLK>,
				 <MT2701_PIN_203_PWM0__FUNC_I2S2_DATA>,
				 <MT2701_PIN_204_PWM1__FUNC_I2S3_DATA>,
				 <MT2701_PIN_53_SPI0_CSN__FUNC_GPIO53>,
				 <MT2701_PIN_54_SPI0_CK__FUNC_GPIO54>,
				 <MT2701_PIN_18_PCM_CLK__FUNC_MRG_CLK>,
				 <MT2701_PIN_19_PCM_SYNC__FUNC_MRG_SYNC>,
				 <MT2701_PIN_20_PCM_RX__FUNC_MRG_TX>,
				 <MT2701_PIN_21_PCM_TX__FUNC_MRG_RX>;
			drive-strength = <MTK_DRIVE_12mA>;
			bias-pull-down;
		};
	};
	ctp_pins_default: eint1default {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_23_EINT1__FUNC_GPIO23>;
			slew-rate = <0>;
			bias-disable;
		};
	};

	ctp_pins_eint_as_int: eint1asint {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_23_EINT1__FUNC_GPIO23>;
			slew-rate = <0>;
			bias-disable;
		};
	};

	ctp_pins_eint_output0: eintoutput0 {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_23_EINT1__FUNC_GPIO23>;
			slew-rate = <1>;
			output-low;
		};
	};

	ctp_pins_eint_output1: eintoutput1 {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_23_EINT1__FUNC_GPIO23>;
			slew-rate = <1>;
			output-high;
		};
	};

	ctp_pins_rst_output0: rstoutput0 {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_104_SPI2_CLK__FUNC_GPIO104>;
			slew-rate = <1>;
			output-low;
		};
	};

	ctp_pins_rst_output1: rstoutput1 {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_104_SPI2_CLK__FUNC_GPIO104>;
			slew-rate = <1>;
			output-high;
		};
	};

	ephy_default: ephy_default {
		pins_ephy {
			pinmux = <MT2701_PIN_275_MDC__FUNC_MDC>,
				<MT2701_PIN_276_MDIO__FUNC_MDIO>,
				<MT2701_PIN_262_G2_TXEN__FUNC_G2_TXEN>,
				<MT2701_PIN_263_G2_TXD3__FUNC_G2_TXD3>,
				<MT2701_PIN_264_G2_TXD2__FUNC_G2_TXD2>,
				<MT2701_PIN_265_G2_TXD1__FUNC_G2_TXD1>,
				<MT2701_PIN_266_G2_TXD0__FUNC_G2_TXD0>,
				<MT2701_PIN_267_G2_TXC__FUNC_G2_TXC>,
				<MT2701_PIN_268_G2_RXC__FUNC_G2_RXC>,
				<MT2701_PIN_269_G2_RXD0__FUNC_G2_RXD0>,
				<MT2701_PIN_270_G2_RXD1__FUNC_G2_RXD1>,
				<MT2701_PIN_271_G2_RXD2__FUNC_G2_RXD2>,
				<MT2701_PIN_272_G2_RXD3__FUNC_G2_RXD3>,
				<MT2701_PIN_274_G2_RXDV__FUNC_G2_RXDV>;
		};
	};

	gsw_reset: gsw_reset {
		pins_rst {
			pinmux = <MT2701_PIN_15_UTXD2__FUNC_GPIO15>;
			output-low;
		};
	};

	i2c0_pins_a: i2c0@0 {
		pins1 {
			pinmux = <MT2701_PIN_75_SDA0__FUNC_SDA0>,
				 <MT2701_PIN_76_SCL0__FUNC_SCL0>;
			bias-disable;
		};
	};

	i2c1_pins_a: i2c1@0 {
		pins1 {
			pinmux = <MT2701_PIN_57_SDA1__FUNC_SDA1>,
				 <MT2701_PIN_58_SCL1__FUNC_SCL1>;
			bias-disable;
		};
	};

	i2c2_pins_a: i2c2@0 {
		pins1 {
			pinmux = <MT2701_PIN_77_SDA2__FUNC_SDA2>,
				 <MT2701_PIN_78_SCL2__FUNC_SCL2>;
			bias-disable;
		};
	};

	mmc0_pins_default: mmc0default {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_121_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
				<MT2701_PIN_120_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
				<MT2701_PIN_119_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
				<MT2701_PIN_118_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
				<MT2701_PIN_114_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
				<MT2701_PIN_113_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
				<MT2701_PIN_112_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
				<MT2701_PIN_111_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
				<MT2701_PIN_116_MSDC0_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			bias-pull-up;
		};

		pins_clk {
			pinmux = <MT2701_PIN_117_MSDC0_CLK__FUNC_MSDC0_CLK>;
			bias-pull-down;
		};

		pins_rst {
			pinmux = <MT2701_PIN_115_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
	};

	mmc0_pins_uhs: mmc0@0{
		pins_cmd_dat {
			pinmux = <MT2701_PIN_121_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
				<MT2701_PIN_120_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
				<MT2701_PIN_119_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
				<MT2701_PIN_118_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
				<MT2701_PIN_114_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
				<MT2701_PIN_113_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
				<MT2701_PIN_112_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
				<MT2701_PIN_111_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
				<MT2701_PIN_116_MSDC0_CMD__FUNC_MSDC0_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_2mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_clk {
			pinmux = <MT2701_PIN_117_MSDC0_CLK__FUNC_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_2mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_01>;
		};

		pins_rst {
			pinmux = <MT2701_PIN_115_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
	};

	mmc1_pins_default: mmc1default {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_107_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
			     <MT2701_PIN_108_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
			     <MT2701_PIN_109_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
			     <MT2701_PIN_110_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
			     <MT2701_PIN_105_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_clk {
			pinmux = <MT2701_PIN_106_MSDC1_CLK__FUNC_MSDC1_CLK>;
			bias-pull-down;
			drive-strength = <MTK_DRIVE_4mA>;
		};

		pins_wp {
			pinmux = <MT2701_PIN_29_EINT7__FUNC_MSDC1_WP>;
			input-enable;
			bias-pull-up;
		};

		pins_insert {
			pinmux = <MT2701_PIN_261_MSDC1_INS__FUNC_GPIO261>;
			bias-pull-up;
		};
	};

	mmc1_pins_uhs: mmc1@0 {
		pins_cmd_dat {
			pinmux = <MT2701_PIN_107_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
			     <MT2701_PIN_108_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
			     <MT2701_PIN_109_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
			     <MT2701_PIN_110_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
			     <MT2701_PIN_105_MSDC1_CMD__FUNC_MSDC1_CMD>;
			input-enable;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
		};

		pins_clk {
			pinmux = <MT2701_PIN_106_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	nor_gpio1_pins: nor {
		pins1 {
			pinmux = <MT2701_PIN_240_EXT_XCS__FUNC_EXT_XCS>,
				<MT2701_PIN_236_EXT_SDIO3__FUNC_EXT_SDIO3>,
				<MT2701_PIN_239_EXT_SDIO0__FUNC_EXT_SDIO0>,
				<MT2701_PIN_241_EXT_SCK__FUNC_EXT_SCK>;
			input-enable;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-up;
		};

		pins2 {
			pinmux = <MT2701_PIN_238_EXT_SDIO1__FUNC_EXT_SDIO1>,
				<MT2701_PIN_237_EXT_SDIO2__FUNC_EXT_SDIO2>;
			drive-strength = <MTK_DRIVE_4mA>;
			bias-pull-up;
		};
	};

	spi_pins_a: spi0@0 {
		pins_spi {
			pinmux = <MT2701_PIN_53_SPI0_CSN__FUNC_SPI0_CS>,
				<MT2701_PIN_54_SPI0_CK__FUNC_SPI0_CK>,
				<MT2701_PIN_55_SPI0_MI__FUNC_SPI0_MI>,
				<MT2701_PIN_56_SPI0_MO__FUNC_SPI0_MO>;
			bias-disable;
		};
	};

	spi_pins_b: spi1@0 {
		pins_spi {
			pinmux = <MT2701_PIN_7_SPI1_CSN__FUNC_SPI1_CS>,
				<MT2701_PIN_8_SPI1_MI__FUNC_SPI1_MI>,
				<MT2701_PIN_9_SPI1_MO__FUNC_SPI1_MO>,
				<MT2701_PIN_199_SPI1_CLK__FUNC_SPI1_CK>;
			bias-disable;
		};
	};

	spi_pins_c: spi2@0 {
		pins_spi {
			pinmux = <MT2701_PIN_101_SPI2_CSN__FUNC_SPI2_CS>,
				<MT2701_PIN_102_SPI2_MI__FUNC_SPI2_MI>,
				<MT2701_PIN_103_SPI2_MO__FUNC_SPI2_MO>,
				<MT2701_PIN_104_SPI2_CLK__FUNC_SPI2_CK>;
			bias-disable;
		};
	};

	usb_iddig: iddig_irq_init{
		pins_cmd_dat {
			pinmux = <MT2701_PIN_44_NCEB1__FUNC_GPIO44>;
			bias-pull-up ;
		};
	};

	usb_drvvbus: drvvbus_init{
		pins_cmd_dat {
			pinmux = <MT2701_PIN_45_NCEB0__FUNC_GPIO45>;
			output-low;
		};
	};

	usb_drvvbus_low: drvvbus_low{
		pins_cmd_dat {
			pinmux = <MT2701_PIN_45_NCEB0__FUNC_GPIO45>;
			slew-rate = <1>;
			output-low;
		};
	};

	usb_drvvbus_high: drvvbus_high{
		pins_cmd_dat {
			pinmux = <MT2701_PIN_45_NCEB0__FUNC_GPIO45>;
			output-high;
		};
	};
};

&pwrap {
	pmic: mt6323 {
		compatible = "mediatek,mt6323";
		interrupt-parent = <&pio>;
		interrupts = <150 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;

		mt6323regulator: mt6323regulator{
			compatible = "mediatek,mt6323-regulator";

			mt6323_vproc_reg: buck_vproc{
				regulator-name = "vproc";
				regulator-min-microvolt = < 700000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vsys_reg: buck_vsys{
				regulator-name = "vsys";
				regulator-min-microvolt = <1400000>;
				regulator-max-microvolt = <2987500>;
				regulator-ramp-delay = <25000>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vpa_reg: buck_vpa{
				regulator-name = "vpa";
				regulator-min-microvolt = < 500000>;
				regulator-max-microvolt = <3650000>;
			};

			mt6323_vtcxo_reg: ldo_vtcxo{
				regulator-name = "vtcxo";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <90>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vcn28_reg: ldo_vcn28{
				regulator-name = "vcn28";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <185>;
			};

			mt6323_vcn33_bt_reg: ldo_vcn33_bt{
				regulator-name = "vcn33_bt";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3600000>;
				regulator-enable-ramp-delay = <185>;
			};

			mt6323_vcn33_wifi_reg: ldo_vcn33_wifi{
				regulator-name = "vcn33_wifi";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3600000>;
				regulator-enable-ramp-delay = <185>;
			};

			mt6323_va_reg: ldo_va{
				regulator-name = "va";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <216>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vcama_reg: ldo_vcama{
				regulator-name = "vcama";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vio28_reg: ldo_vio28{
				regulator-name = "vio28";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <216>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vusb_reg: ldo_vusb{
				regulator-name = "vusb";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <216>;
				regulator-boot-on;
			};

			mt6323_vmc_reg: ldo_vmc{
				regulator-name = "vmc";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <36>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vmch_reg: ldo_vmch{
				regulator-name = "vmch";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <36>;
				regulator-boot-on;
			};

			mt6323_vemc3v3_reg: ldo_vemc3v3{
				regulator-name = "vemc3v3";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <36>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vgp1_reg: ldo_vgp1{
				regulator-name = "vgp1";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vgp2_reg: ldo_vgp2{
				regulator-name = "vgp2";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3000000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vgp3_reg: ldo_vgp3{
				regulator-name = "vgp3";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vcn18_reg: ldo_vcn18{
				regulator-name = "vcn18";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vsim1_reg: ldo_vsim1{
				regulator-name = "vsim1";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3000000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vsim2_reg: ldo_vsim2{
				regulator-name = "vsim2";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3000000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vrtc_reg: ldo_vrtc{
				regulator-name = "vrtc";
				regulator-min-microvolt = <2800000>;
				regulator-max-microvolt = <2800000>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vcamaf_reg: ldo_vcamaf{
				regulator-name = "vcamaf";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vibr_reg: ldo_vibr{
				regulator-name = "vibr";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <36>;
			};

			mt6323_vrf18_reg: ldo_vrf18{
				regulator-name = "vrf18";
				regulator-min-microvolt = <1825000>;
				regulator-max-microvolt = <1825000>;
				regulator-enable-ramp-delay = <187>;
			};

			mt6323_vm_reg: ldo_vm{
				regulator-name = "vm";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vio18_reg: ldo_vio18{
				regulator-name = "vio18";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
				regulator-always-on;
				regulator-boot-on;
			};

			mt6323_vcamd_reg: ldo_vcamd{
				regulator-name = "vcamd";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
			};

			mt6323_vcamio_reg: ldo_vcamio{
				regulator-name = "vcamio";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-enable-ramp-delay = <216>;
			};
		};
	};
};

&touch {
	vtouch-supply = <&mt6323_vgp1_reg>;
	tpd-resolution = <1080 1920>;
	use-tpd-button = <0>;
	tpd-key-num = <4>;
	tpd-key-local= <139 172 158 0>;
	tpd-key-dim-local = <60 850 50 30 180 850 50 30 300 850 50 30 420 850 50 30>;
	tpd-max-touch-num = <5>;
	tpd-filter-enable = <1>;
	tpd-filter-pixel-density = <124>;
	tpd-filter-custom-prameters = <0 0 0 0 0 0 0 0 0 0 0 0>;
	tpd-filter-custom-speed = <0 0 0>;
	pinctrl-names = "default", "state_eint_as_int", "state_eint_output0", "state_eint_output1",
		"state_rst_output0", "state_rst_output1";
	pinctrl-0 = <&ctp_pins_default>;
	pinctrl-1 = <&ctp_pins_eint_as_int>;
	pinctrl-2 = <&ctp_pins_eint_output0>;
	pinctrl-3 = <&ctp_pins_eint_output1>;
	pinctrl-4 = <&ctp_pins_rst_output0>;
	pinctrl-5 = <&ctp_pins_rst_output1>;
	status = "okay";
};

&uart0 {
	status = "okay";
};


&u3phy1 {
	status = "okay";
};

&u3phy2 {
	status = "okay";
};


&usb1 {
	vusb33-supply = <&mt6323_vusb_reg>;
	status = "okay";
};

&usb2 {
	vusb33-supply = <&mt6323_vusb_reg>;
	status = "okay";
};

&usb0 {
	pinctrl-names = "iddig_irq_init", "drvvbus_init", "drvvbus_low","drvvbus_high";
	pinctrl-0 = <&usb_iddig>;
	pinctrl-1 = <&usb_drvvbus>;
	pinctrl-2 = <&usb_drvvbus_low>;
	pinctrl-3 = <&usb_drvvbus_high>;
	status = "okay";
	drvvbus_gpio = <&pio 45 0>;
	otg-iddig{
		iddig_gpio = <&pio 44 0>;
		interrupt-parent = <&pio>;
		interrupts = <267 IRQ_TYPE_LEVEL_LOW>;
	};
	vbus-detect{
		vbus_gpio = <&pio 237 0>;
		interrupt-parent = <&pio>;
		interrupts = <123 IRQ_TYPE_LEVEL_HIGH>;
	};
};
